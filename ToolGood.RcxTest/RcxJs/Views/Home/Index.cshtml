
@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Index</title>
    <script src="~/js/rcx.js"></script>
</head>
<body>
    <div>
    </div>
    <script>
        function rcx(data, pass) {
            function GetKey(pass, klen) {
                var mBox = [];
                for (var i = 0; i < klen; i++) {
                    mBox.push(i);
                }
                var j = 0;
                for (var i = 0; i < klen; i++) {
                    var p = pass.charCodeAt(i % pass.length)

                    j = (j + mBox[i] + p) % klen;
                    var temp = mBox[i];
                    mBox[i] = mBox[j];
                    mBox[j] = temp;
                }
                return mBox;
            }
            var mBox = GetKey(pass, 256);
            var bytes = data;
            if (typeof data === 'string') {
                bytes = stringToByte(data);
            }
            var output = [];
            var i = 0, j = 0;
            for (var offset = 0; offset < bytes.length; offset++) {
                i = (++i) & 0xFF;
                j = (j + mBox[i]) & 0xFF;

                var a = bytes[offset];
                var c = (a ^ mBox[(mBox[i] + mBox[j]) & 0xFF]);
                output.push(c);

                var temp2 = mBox[c];
                mBox[c] = mBox[a];
                mBox[a] = temp2;
                j = (j + a + c);
            }
            return output;
        }
        function threeRcx(data, pass) {
            var output = rcx(data, pass);
            output.reverse();
            output = rcx(output, pass);
            output.reverse();
            output = rcx(output, pass);
            return output;
        }

        function stringToByte(str) {
            var bytes = new Array();
            var len, c;
            len = str.length;
            for (var i = 0; i < len; i++) {
                c = str.charCodeAt(i);
                if (c >= 0x010000 && c <= 0x10FFFF) {
                    bytes.push(((c >> 18) & 0x07) | 0xF0);
                    bytes.push(((c >> 12) & 0x3F) | 0x80);
                    bytes.push(((c >> 6) & 0x3F) | 0x80);
                    bytes.push((c & 0x3F) | 0x80);
                } else if (c >= 0x000800 && c <= 0x00FFFF) {
                    bytes.push(((c >> 12) & 0x0F) | 0xE0);
                    bytes.push(((c >> 6) & 0x3F) | 0x80);
                    bytes.push((c & 0x3F) | 0x80);
                } else if (c >= 0x000080 && c <= 0x0007FF) {
                    bytes.push(((c >> 6) & 0x1F) | 0xC0);
                    bytes.push((c & 0x3F) | 0x80);
                } else {
                    bytes.push(c & 0xFF);
                }
            }
            return bytes;
        }

        function byteToString(arr) {
            if (typeof arr === 'string') {
                return arr;
            }
            var str = '',
                _arr = arr;
            for (var i = 0; i < _arr.length; i++) {
                var one = _arr[i].toString(2),
                    v = one.match(/^1+?(?=0)/);
                if (v && one.length == 8) {
                    var bytesLength = v[0].length;
                    var store = _arr[i].toString(2).slice(7 - bytesLength);
                    for (var st = 1; st < bytesLength; st++) {
                        store += _arr[st + i].toString(2).slice(2);
                    }
                    str += String.fromCharCode(parseInt(store, 2));
                    i += bytesLength - 1;
                } else {
                    str += String.fromCharCode(_arr[i]);
                }
            }
            return str;
        }

        function arrayToHex(data) {
            var val = "";
            for (var i = 0; i < data.length; i++) {
                val += data[i].toString(16).toUpperCase();
            }
            return val;
        }
        function hexToArray(str) {
            var data = [];
            for (var i = 0; i < str.length; i += 2) {
                var t = str[i] + str[i + 1];
                data.push(parseInt(t, 16));
            }
            return data;
        }

        var base64EncodeChars = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
        var base64DecodeChars = new Array(
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,
            -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1, 63,
            52, 53, 54, 55, 56, 57, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1,
            -1, 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,
            15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, -1, -1, -1, -1, -1,
            -1, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40,
            41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, -1, -1, -1, -1, -1);

        function arrayToBase64(data) {
            var out, i, len;
            var c1, c2, c3;
            len = data.length;
            i = 0;
            out = "";
            while (i < len) {
                c1 = data[i++] & 0xff;
                if (i == len) {
                    out += base64EncodeChars.charAt(c1 >> 2);
                    out += base64EncodeChars.charAt((c1 & 0x3) << 4);
                    out += "==";
                    break;
                }
                c2 = data[i++];
                if (i == len) {
                    out += base64EncodeChars.charAt(c1 >> 2);
                    out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
                    out += base64EncodeChars.charAt((c2 & 0xF) << 2);
                    out += "=";
                    break;
                }
                c3 = data[i++];
                out += base64EncodeChars.charAt(c1 >> 2);
                out += base64EncodeChars.charAt(((c1 & 0x3) << 4) | ((c2 & 0xF0) >> 4));
                out += base64EncodeChars.charAt(((c2 & 0xF) << 2) | ((c3 & 0xC0) >> 6));
                out += base64EncodeChars.charAt(c3 & 0x3F);
            }
            return out;
        }
        function base64ToArray(str) {
            var c1, c2, c3, c4;
            var len = str.length;
            var i = 0;
            var out = [];
            while (i < len) {
                do {
                    c1 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
                } while (i < len && c1 == -1);
                if (c1 == -1)
                    break;
                do {
                    c2 = base64DecodeChars[str.charCodeAt(i++) & 0xff];
                } while (i < len && c2 == -1);
                if (c2 == -1)
                    break;
                out.push((c1 << 2) | ((c2 & 0x30) >> 4));
                //out += String.fromCharCode((c1 << 2) | ((c2 & 0x30) >> 4));
                do {
                    c3 = str.charCodeAt(i++) & 0xff;
                    if (c3 == 61)
                        return out;
                    c3 = base64DecodeChars[c3];
                } while (i < len && c3 == -1);
                if (c3 == -1)
                    break;
                out.push(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));

                //out += String.fromCharCode(((c2 & 0XF) << 4) | ((c3 & 0x3C) >> 2));
                do {
                    c4 = str.charCodeAt(i++) & 0xff;
                    if (c4 == 61)
                        return out;
                    c4 = base64DecodeChars[c4];
                } while (i < len && c4 == -1);
                if (c4 == -1)
                    break;
                out.push(((c3 & 0x03) << 6) | c4);
                //out += String.fromCharCode(((c3 & 0x03) << 6) | c4);
            }
            return out;
        };

     </script>
    <script>
        var dt = rcx('ABCDDDDDDDDDDDDDDDDDDDDDD', 'ToolGood');
        var t3 = arrayToBase64(dt);
        console.log(t3);
        console.log(base64ToArray(t3));

        var dt2 = threeRcx('ABCDDDDDDDDDDDDDDDDDDDDDD', 'ToolGood');
        var t4 = arrayToBase64(dt2);
        console.log(t4);
        //console.log(arrayToBase64(dt));

        //var t = base64ToArray(arrayToBase64(dt))
        //console.log(t);
    </script>
</body>
</html>
